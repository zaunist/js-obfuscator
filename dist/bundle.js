(()=>{class e{constructor(){this.wasmModule=null,this.isReady=!1,this.initializeApp()}async initializeApp(){console.log("开始初始化应用..."),this.initializeEventListeners(),await this.loadWASM(),this.updateWASMStatus(),this.loadExampleCode()}initializeEventListeners(){document.getElementById("obfuscateBtn").addEventListener("click",()=>{this.obfuscateCode()}),document.getElementById("copyResult").addEventListener("click",()=>{this.copyResult()}),document.getElementById("downloadResult").addEventListener("click",()=>{this.downloadResult()}),document.getElementById("loadExample").addEventListener("click",()=>{this.loadExampleCode()}),document.getElementById("clearInput").addEventListener("click",()=>{this.clearInput()}),document.getElementById("inputCode").addEventListener("input",()=>{this.updateInputStats()}),document.querySelectorAll('.config-item input[type="checkbox"]').forEach(e=>{e.addEventListener("change",()=>{this.saveConfig()})}),this.loadConfig()}async loadWASM(){try{if(console.log("开始加载 WASM..."),!window.Go)throw new Error("TinyGo 运行时未加载");const e=new Go;console.log("开始获取 WASM 文件...");const t=await fetch("/wasm/obfuscator.wasm");if(!t.ok)throw new Error(`WASM 文件获取失败: ${t.status}`);console.log("WASM 文件获取成功，开始实例化...");const n=await t.arrayBuffer(),s=await WebAssembly.instantiate(n,e.importObject);if(this.wasmInstance=s.instance,console.log("WASM 实例化成功，启动程序..."),e.run(this.wasmInstance),console.log("等待 WASM 函数注册..."),await this.waitForWASMFunctions(),this.isReady=!0,console.log("WASM 模块加载成功！"),window.wasmTest){const e=window.wasmTest();console.log("测试结果:",e)}}catch(e){console.error("WASM 加载失败:",e),this.showError("WASM 模块加载失败: "+e.message)}}createWASIImports(){new TextEncoder;const e=new TextDecoder;return{wasi_snapshot_preview1:{proc_exit:e=>{console.log(`WASI proc_exit called with code: ${e}`)},fd_write:(e,t,n,s)=>0,fd_read:()=>0,fd_seek:()=>0,fd_close:()=>0,path_open:()=>0,environ_sizes_get:()=>0,environ_get:()=>0,args_sizes_get:(e,t)=>0,args_get:()=>0,random_get:(e,t)=>0,clock_time_get:(e,t,n)=>0,fd_read:(e,t,n,s)=>0,fd_close:e=>0,fd_seek:(e,t,n,s,o)=>0,environ_sizes_get:(e,t)=>0,environ_get:(e,t)=>0,args_sizes_get:(e,t)=>0,args_get:(e,t)=>0,random_get:(e,t)=>{const n=new Uint8Array(this.wasmMemory.buffer);for(let s=0;s<t;s++)n[e+s]=Math.floor(256*Math.random());return 0},clock_time_get:(e,t,n)=>{const s=BigInt(1e6*Date.now());return new DataView(this.wasmMemory.buffer).setBigUint64(n,s,!0),0}},gojs:{"runtime.wasmExit":e=>{console.log(`Go program exited with code: ${e}`)},"runtime.wasmWrite":(e,t,n)=>{if(!this.wasmInstance||!this.wasmInstance.exports.memory)return 0;const s=new Uint8Array(this.wasmInstance.exports.memory.buffer).slice(t,t+n),o=(new TextDecoder).decode(s);return 1===e?console.log(o):2===e&&console.error(o),n},"runtime.nanotime":()=>BigInt(1e6*Date.now()),"runtime.walltime":()=>{const e=Date.now();return[Math.floor(e/1e3),e%1e3*1e6]},"runtime.ticks":()=>BigInt(1e6*performance.now()),"runtime.scheduleTimeoutEvent":e=>{setTimeout(()=>{this.wasmInstance&&this.wasmInstance.exports.go_scheduler&&this.wasmInstance.exports.go_scheduler()},e/1e6)},"syscall/js.valueGet":()=>0,"syscall/js.valueSet":()=>{},"syscall/js.valueDelete":()=>{},"syscall/js.valueIndex":()=>0,"syscall/js.valueSetIndex":()=>{},"syscall/js.valueCall":()=>0,"syscall/js.valueInvoke":()=>0,"syscall/js.valueNew":()=>0,"syscall/js.valueLength":()=>0,"syscall/js.valuePrepareString":()=>0,"syscall/js.valueLoadString":()=>{},"syscall/js.valueInstanceOf":()=>!1,"syscall/js.copyBytesToGo":()=>0,"syscall/js.copyBytesToJS":()=>0},js:{mem:new WebAssembly.Memory({initial:256,maximum:256}),setGlobal:(e,t)=>{const n=this.getStringFromMemory(e);window[n]=t},getString:(t,n)=>{const s=new Uint8Array(this.wasmMemory.buffer).slice(t,t+n);return e.decode(s)}}}}getStringFromMemory(e){if(!this.wasmMemory)return"";const t=new Uint8Array(this.wasmMemory.buffer);let n=0;for(;0!==t[e+n];)n++;const s=t.slice(e,e+n);return(new TextDecoder).decode(s)}setupWASMFunctions(){if(!this.wasmInstance||!this.wasmInstance.exports)throw new Error("WASM 实例未正确初始化");const e=this.wasmInstance.exports;e.obfuscateJS?(window.obfuscateJS=e.obfuscateJS,console.log("obfuscateJS 函数已设置")):console.warn("未找到 obfuscateJS 导出函数"),e.wasmTest&&(window.wasmTest=e.wasmTest,console.log("wasmTest 函数已设置")),console.log("可用的 WASM 导出:",Object.keys(e))}async waitForWASMFunctions(){let e=0;for(;e<50;){if(console.log(`等待 WASM 函数注册... 尝试 ${e+1}/50`),window.wasmReady&&window.wasmTest&&window.obfuscateJS)return void console.log("所有 WASM 函数注册成功！");await new Promise(e=>setTimeout(e,200)),e++}throw new Error("WASM 函数注册超时")}async loadGoRuntime(){return new Promise((e,t)=>{if(window.Go)return void e();const n=document.createElement("script");n.src="/wasm_exec.js",n.onload=()=>{window.Go?e():t(new Error("Go runtime not available"))},n.onerror=()=>t(new Error("Failed to load Go runtime")),document.head.appendChild(n)})}updateWASMStatus(){const e=document.getElementById("wasmStatus");e&&(this.isReady?(e.textContent="WASM 状态: 已就绪",e.style.color="#28a745"):(e.textContent="WASM 状态: 加载失败",e.style.color="#dc3545"))}getObfuscatorConfig(){return{identifierObfuscation:document.getElementById("identifierObfuscation").checked,stringEncryption:document.getElementById("stringEncryption").checked,controlFlowFlattening:document.getElementById("controlFlowFlattening").checked,compactCode:document.getElementById("compactCode").checked,preserveComments:!1}}async obfuscateCode(){if(!this.isReady)return void this.showStatus("WASM 模块未就绪，请稍后再试","error");const e=document.getElementById("inputCode").value.trim();if(e){this.setLoadingState(!0);try{const t=this.getObfuscatorConfig();console.log("开始混淆，配置:",t);const n=window.obfuscateJS(e,JSON.stringify(t));console.log("混淆结果:",n),n.success?(document.getElementById("outputCode").value=n.code,this.updateOutputStats(n.stats),this.showStatus("代码混淆完成！","success")):this.showStatus("混淆失败: "+n.error,"error")}catch(e){console.error("混淆过程出错:",e),this.showStatus("混淆过程出错: "+e.message,"error")}finally{this.setLoadingState(!1)}}else this.showStatus("请输入要混淆的代码","warning")}async copyResult(){const e=document.getElementById("outputCode").value;if(e)try{await navigator.clipboard.writeText(e),this.showCopySuccess()}catch(e){document.getElementById("outputCode").select(),document.execCommand("copy"),this.showCopySuccess()}else this.showStatus("没有可复制的内容","warning")}downloadResult(){const e=document.getElementById("outputCode").value;if(!e)return void this.showStatus("没有可下载的内容","warning");const t=new Blob([e],{type:"application/javascript"}),n=URL.createObjectURL(t),s=document.createElement("a");s.href=n,s.download="obfuscated.js",document.body.appendChild(s),s.click(),document.body.removeChild(s),URL.revokeObjectURL(n),this.showStatus("文件下载已开始","success")}loadExampleCode(){document.getElementById("inputCode").value='// 示例 JavaScript 代码\nfunction calculateSum(numbers) {\n    let sum = 0;\n    for (let i = 0; i < numbers.length; i++) {\n        sum += numbers[i];\n    }\n    return sum;\n}\n\nfunction greetUser(name) {\n    const greeting = "Hello, " + name + "!";\n    console.log(greeting);\n    return greeting;\n}\n\n// 主函数\nfunction main() {\n    const testNumbers = [1, 2, 3, 4, 5];\n    const result = calculateSum(testNumbers);\n    \n    greetUser("World");\n    \n    if (result > 10) {\n        console.log("Sum is greater than 10: " + result);\n    } else {\n        console.log("Sum is less than or equal to 10: " + result);\n    }\n}\n\n// 执行主函数\nmain();',this.updateInputStats()}clearInput(){document.getElementById("inputCode").value="",document.getElementById("outputCode").value="",this.updateInputStats(),this.updateOutputStats(null),this.hideStatus()}updateInputStats(){const e=document.getElementById("inputCode").value,t=e.length,n=e.split("\n").length;document.getElementById("inputStats").textContent=`字符数: ${t} | 行数: ${n}`}updateOutputStats(e){const t=document.getElementById("outputCode").value.length;let n="";e&&e.originalSize>0&&(n=` | 压缩率: ${(100*(1-e.compression)).toFixed(1)}%`),document.getElementById("outputStats").textContent=`字符数: ${t}${n}`}showStatus(e,t="success"){const n=document.getElementById("statusPanel"),s=n.querySelector(".status-message");n.className=`status-panel ${t}`,s.textContent=e,n.style.display="block",setTimeout(()=>{this.hideStatus()},3e3)}hideStatus(){const e=document.getElementById("statusPanel");e&&(e.style.display="none")}showCopySuccess(){const e=document.createElement("div");e.className="copy-success",e.textContent="已复制到剪贴板",e.style.cssText="\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: #28a745;\n      color: white;\n      padding: 10px 20px;\n      border-radius: 4px;\n      z-index: 1000;\n    ",document.body.appendChild(e),setTimeout(()=>{document.body.removeChild(e)},2e3)}setLoadingState(e){const t=document.getElementById("obfuscateBtn");if(t){const n=t.querySelector(".btn-text"),s=t.querySelector(".btn-loading");e?(t.disabled=!0,n&&(n.style.display="none"),s&&(s.style.display="inline-flex")):(t.disabled=!1,n&&(n.style.display="inline"),s&&(s.style.display="none"))}}saveConfig(){const e=this.getObfuscatorConfig();localStorage.setItem("obfuscator-config",JSON.stringify(e))}loadConfig(){try{const e=localStorage.getItem("obfuscator-config");if(e){const t=JSON.parse(e);Object.keys(t).forEach(e=>{const n=document.getElementById(e);n&&"boolean"==typeof t[e]&&(n.checked=t[e])})}}catch(e){console.warn("加载配置失败:",e)}}showError(e){console.error(e),this.showStatus(e,"error")}}document.addEventListener("DOMContentLoaded",()=>{console.log("DOM 加载完成，启动应用..."),new e})})();